using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

//c#은 굉장히 고지식한 객체지향 언어.
//이 말이 무슨말이냐?? "class의 노예"
//모든 길은 클래스로 통한다.
//c#이라는 언어는 클래스를 설명하지 않고는 사실 무엇을 설명한다는 것이 의미가 없는 수준.

//게임이란 것은 굉장히 다양한 개념들을 품고 있다.
//직업, 레벨, 스킬, 체력, 마나, 퀘스트, 몬스터, 무기...

//객체지향은 저 중에서 적절히 묶어서 클래스화라는 것을 시킨다.
//게임의 속성과 개념.. ->그것을 표현하는것이 클래스

//객체지향 프로그래미의 가장 핵심적인 내용을 설명하고 있는 것.
//객체지향이란? 네기 표현하고 싶은 것을 클래스로 만들어서
//그 클래스로 객체를 만드는 프로그램
//객체로 모든것을 해결하기 때문에 "객체를 지향(향한다)" 할 수 밖에 없는 프로그래밍.

//class (클래스를 선헌하기 위한 키워드) 이름
//{ <- 클래스 내용의 시작.
//} <- 끝
class Monster
{
    //내부의 내용은 중요하지 않음
}

class Pet
{
    //내부의 내용은 중요하지 않음
}

class Player
{
    //내부의 내용은 중요하지 않음
}
// 뭐 해야할 지 모를때는 속성을 구분하고(주인공, 총, 몬스터... 등) 클래스를 일단 선언해라.
// 내용은 그 다음 이야기.

//내가 생각한 개념이 내 프로그램에소 사용되어 지기 위한 설계도를 의미하게 된다.
//코딩에서는 무조건 설계도가 먼저이다.
//무조건 클래스 먼저 그다음 객체.